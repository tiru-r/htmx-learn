package components

import (
	"time"
	"fmt"
)

type User struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
	Email string `json:"email"`
}

templ DynamicContent() {
	<div class="space-y-6">
		<div class="card p-6">
			<h2 class="text-2xl font-bold text-gray-900 mb-4">Dynamic Content Loading</h2>
			<div class="space-y-4">
				<button 
					class="btn btn-primary"
					hx-get="/api/time"
					hx-target="#time-display"
					hx-swap="innerHTML"
				>
					Get Current Time
				</button>
				<div id="time-display" class="p-4 bg-gray-100 rounded-lg text-center text-gray-600">
					Click the button to load current time
				</div>
			</div>
		</div>

		<div class="card p-6">
			<h2 class="text-2xl font-bold text-gray-900 mb-4">User Management</h2>
			<div class="space-y-4">
				<div class="flex space-x-4">
					<input 
						type="text" 
						id="user-name" 
						placeholder="Enter user name"
						class="input flex-1"
					/>
					<input 
						type="email" 
						id="user-email" 
						placeholder="Enter user email"
						class="input flex-1"
					/>
					<button 
						class="btn btn-primary"
						hx-post="/api/users"
						hx-target="#users-list"
						hx-swap="beforeend"
						hx-include="#user-name, #user-email"
						hx-on:after-request="document.getElementById('user-name').value=''; document.getElementById('user-email').value='';"
					>
						Add User
					</button>
				</div>
				<div id="users-list" class="space-y-2">
					<!-- Users will be dynamically loaded here -->
				</div>
				<button 
					class="btn btn-secondary"
					hx-get="/api/users"
					hx-target="#users-list"
					hx-swap="innerHTML"
				>
					Load Users
				</button>
			</div>
		</div>

		<div class="card p-6">
			<h2 class="text-2xl font-bold text-gray-900 mb-4">Paginated User List</h2>
			<div class="space-y-4">
				<button 
					class="btn btn-secondary"
					hx-get="/api/users/paginated?page=1&page_size=5"
					hx-target="#user-list"
					hx-swap="innerHTML"
				>
					Load Paginated Users
				</button>
				<div id="user-list" class="space-y-2">
					<!-- Paginated users will be loaded here -->
				</div>
			</div>
		</div>

		<div class="card p-6">
			<h2 class="text-2xl font-bold text-gray-900 mb-4">Search Example</h2>
			<div class="space-y-4">
				<input 
					type="text" 
					placeholder="Search users..."
					class="input"
					hx-post="/api/search"
					hx-target="#search-results"
					hx-trigger="keyup changed delay:300ms"
					hx-indicator=".htmx-indicator"
				/>
				<div class="htmx-indicator">
					<div class="text-sm text-gray-500">Searching...</div>
				</div>
				<div id="search-results" class="space-y-2">
					<!-- Search results will appear here -->
				</div>
			</div>
		</div>
	</div>
}

templ TimeDisplay(currentTime time.Time) {
	<div class="text-lg font-mono text-blue-600">
		{ currentTime.Format("2006-01-02 15:04:05 MST") }
	</div>
}

templ UserCard(user User) {
	<div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg border">
		<div>
			<div class="font-medium text-gray-900">{ user.Name }</div>
			<div class="text-sm text-gray-500">{ user.Email }</div>
		</div>
		<button 
			class="btn btn-danger text-sm px-3 py-1"
			hx-delete={ "/api/users/" + fmt.Sprintf("%d", user.ID) }
			hx-target="closest div"
			hx-swap="outerHTML"
			hx-confirm="Are you sure you want to delete this user?"
		>
			Delete
		</button>
	</div>
}

templ SearchResults(users []User) {
	if len(users) == 0 {
		<div class="text-gray-500 text-center py-4">No users found</div>
	} else {
		for _, user := range users {
			@UserCard(user)
		}
	}
}